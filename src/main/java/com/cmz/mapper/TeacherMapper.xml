<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmz.mapper.TeacherMapper">

	 <select id="queryTeacherById" resultType="Teacher" parameterType="int">
	 	select * from Teacher where tid = #{id}
	 </select>
	 
	 <select id="queryAllTeacher" resultType="Teacher" >
	 	select * from Teacher 
	 </select>
	 
	 <select id="addTeacher" parameterType="Teacher" >
	 	insert into Teacher(tid,tage,tname,object) values (#{tid},#{tage},#{tname},#{object})
	 </select>
	 
	 <select id="deleteTeacherById" parameterType="int">
	 	delete from Teacher where tid = #{id}
	 </select>	 
	 
	 <select id="updateTeacher" parameterType="Teacher">
	 	update Teacher set tid=#{tid},tage=#{tage},tname=#{tname},object=#{object} where tid=#{tid}
	 </select>
	 
	 <!-- 姓名模糊查询 -->
	 <select id="queryTeacherByName" resultType="Teacher" parameterType="string">
	 	select * from Teacher where tname like '%${value}%'
	 </select>
	 
	 <select id="queryTeacherInObject" parameterType="com.cmz.entity.Teacher"  resultType="Teacher">
	  	select * from Teacher 
		<where> 
		<if test="Teachers!=null and Teachers.size>0">
			<!-- 注意 open第一个字符是空格 不然会连到一起 -->
			<foreach collection="Teachers" open=" and tid in("  close=")"  item="curId" separator=",">
				#{curId}
			</foreach>
		</if> 
	  	</where>
	  </select>
	  
<!-- 	  <select id="queryTeacherWithComments" resultMap="TeacherWithComments" parameterType="int">
	  	select s.*,c.* from Teacher s inner join scoreform c on s.sfid=c.tid where s.tid=#{tid}
	  </select> -->
	  
	  <select id="queryTeacherWithStudents" resultMap="studentWithScoreForm" parameterType="int">
	  	select s.*,t.* from teacher t 
	  	inner join student s 
	  	on t.tid=s.ph_teacher_id or t.tid=s.sc_teacher_id 
	  	where t.tid=#{tid}
	  </select>
	  
	<resultMap type="Teacher" id="studentWithScoreForm">
		<id property="tid" column="tid"/>
		<result property="tname" column="tname"/>
		<result property="tage" column="tage"/>
		<result property="object" column="object"/>
		<!-- 配置成员属性学生   属性类型javaType 属性的元素类型 ofType -->
		<collection property="students" ofType="Student">
			<id property="sid" column="sid"/>
			<result property="sage" column="sage"/>
			<result property="sname" column="sname"/>
			<result property="saddress" column="saddress"/>
			<result property="sfid" column="sfid"/>
			<!-- 这里其实可以级联配置 即在配置ScoreForm 如果需要的话 -->
		</collection>
	</resultMap>	  

	 
</mapper>